// <auto-generated />
using System;
using HomeAutomation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeAutomation.Migrations
{
    [DbContext(typeof(BudgetContext))]
    partial class BudgetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("HomeAutomation.Models.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RegisterBudget")
                        .HasColumnType("TEXT");

                    b.Property<double>("SumPrice")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Budget", (string)null);
                });

            modelBuilder.Entity("HomeAutomation.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Register")
                        .HasColumnType("TEXT");

                    b.Property<string>("Whatsapp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("HomeAutomation.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BudgetIdId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescriptionService")
                        .HasColumnType("TEXT");

                    b.Property<double>("PriceService")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("RegisterItem")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BudgetIdId");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("HomeAutomation.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("HomeAutomation.Models.Budget", b =>
                {
                    b.HasOne("HomeAutomation.Models.Client", "client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");
                });

            modelBuilder.Entity("HomeAutomation.Models.Item", b =>
                {
                    b.HasOne("HomeAutomation.Models.Budget", "BudgetId")
                        .WithMany()
                        .HasForeignKey("BudgetIdId");

                    b.Navigation("BudgetId");
                });

            modelBuilder.Entity("HomeAutomation.Models.Service", b =>
                {
                    b.HasOne("HomeAutomation.Models.Item", null)
                        .WithMany("Services")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("HomeAutomation.Models.Item", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
